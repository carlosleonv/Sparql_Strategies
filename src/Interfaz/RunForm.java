/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import bench.BenchmarkResult;
import bench.QueryExecution;
import cli.Run;
import com.hp.hpl.jena.sparql.engine.binding.Binding;
import java.io.File;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import join.JoinOps;
import utils.QueryParser;
import utils.SplitQuery;

/**
 *
 * @author user
 */
public class RunForm extends javax.swing.JFrame {

    DefaultTableModel tabla_Resultados = new DefaultTableModel();
    String[][] matriz_Resultados;
    /**
     * Creates new form RunForm
     */
    public RunForm() {
        initComponents();
        cargarComboEndpoints();        
        cargarComboEstrategias();
        this.setTitle("Sparql_Strategies");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_Results = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txt_Browse = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_Browse = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cmb_Strategy = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_Query = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        btn_Run = new javax.swing.JButton();
        btn_Cerrar = new javax.swing.JButton();
        txt_Strategy = new javax.swing.JTextField();
        btn_Strategy = new javax.swing.JButton();
        cmb_Endpoint = new javax.swing.JComboBox();
        txt_Endpoint = new javax.swing.JTextField();
        btn_Endpoint = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        txt_Results.setColumns(20);
        txt_Results.setRows(5);
        jScrollPane5.setViewportView(txt_Results);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane5.addTab("Results", jPanel10);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        txt_Browse.setColumns(20);
        txt_Browse.setRows(5);
        jScrollPane6.setViewportView(txt_Browse);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane5.addTab("Browse_Archivo", jPanel4);

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        tbl_Browse.setModel(tabla_Resultados);
        jScrollPane2.setViewportView(tbl_Browse);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane5.addTab("Browse_Table", jPanel8);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel4.setText("   Strategy:");

        cmb_Strategy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb_Strategy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_StrategyActionPerformed(evt);
            }
        });

        txt_Query.setColumns(20);
        txt_Query.setRows(5);
        jScrollPane1.setViewportView(txt_Query);

        jLabel5.setText("Query:");

        btn_Run.setText("Run");
        btn_Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RunActionPerformed(evt);
            }
        });

        btn_Cerrar.setText("Cerrar");
        btn_Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CerrarActionPerformed(evt);
            }
        });

        txt_Strategy.setText("SERVICE");
        txt_Strategy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_StrategyActionPerformed(evt);
            }
        });

        btn_Strategy.setText("√");
        btn_Strategy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_StrategyActionPerformed(evt);
            }
        });

        cmb_Endpoint.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb_Endpoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_EndpointActionPerformed(evt);
            }
        });

        txt_Endpoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_EndpointActionPerformed(evt);
            }
        });

        btn_Endpoint.setText("√");
        btn_Endpoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EndpointActionPerformed(evt);
            }
        });

        jLabel7.setText("Endpoint Local:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_Endpoint)
                            .addComponent(cmb_Endpoint, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btn_Endpoint, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_Strategy)
                            .addComponent(cmb_Strategy, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Strategy, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Run, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btn_Cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(292, 292, 292))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_Endpoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(btn_Endpoint))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_Endpoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_Strategy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(btn_Strategy))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_Strategy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Run)
                    .addComponent(btn_Cerrar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane5)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RunActionPerformed

        txt_Results.setText(null);
        txt_Browse.setText(null);
        //txt_XML.setText(null);
        //txt_JSON.setText(null);
        //txt_CSV.setText(null);
        
        if(!validaVacio(txt_Endpoint.getText(), "Endpoint"))
            return;
        if(!validaVacio(txt_Strategy.getText(), "Strategy"))
            return;
                
        String[] joins = {txt_Strategy.getText()};
               
	System.out.println("Joins "+Arrays.toString(joins));
        txt_Results.append("Joins "+Arrays.toString(joins));              
        txt_Results.append(System.getProperty("line.separator"));   // Salto de línea 
        
	String localEndpoint = txt_Endpoint.getText();                
               
	boolean debug = false;
        int batch = -1;
	Run run = new Run();

        run.runQuery(txt_Query.getText(), joins, localEndpoint,debug, batch);
                  
        txt_Results.append(run.getTexto_Results().getText());
        txt_Browse.append(run.getTexto_Browse().getText());
        
        separarResultados(txt_Browse.getText());        
        datosTabla();

/*                        
        txt_Results.setText(null);
        txt_Browse.setText(null);
        txt_XML.setText(null);
        txt_JSON.setText(null);
        txt_CSV.setText(null);
        
        if(!validaVacio(txt_Consulta.getText(), "Consulta"))
            return;
        if(!validaVacio(txt_Endpoint.getText(), "Endpoint"))
            return;
        if(!validaVacio(txt_Strategy.getText(), "Strategy"))
            return;
                
        String[] joins = {txt_Strategy.getText()};
               
	System.out.println("Joins "+Arrays.toString(joins));
        txt_Results.append("Joins "+Arrays.toString(joins));              
        txt_Results.append(System.getProperty("line.separator"));   // Salto de línea 
        
        File outDir = new File("test.outdir");
	if (!outDir.exists())
            outDir.mkdirs();
		        
	String localEndpoint = txt_Endpoint.getText();                
        String pathConsulta = "resources/bio/" + txt_Consulta.getText();
        File subQueries = new File(pathConsulta);
               
	boolean debug = false;
        int batch = -1;
	Run run = new Run();

        if(subQueries.isDirectory()){
            for(File q : subQueries.listFiles()){
		if(q.isFile()){
                    run.runQuery(q, joins, localEndpoint,outDir,debug, batch);
		}
            }
	}else{
            run.runQuery(subQueries, joins, localEndpoint,outDir,debug, batch);
	}        
                  
        txt_Results.append(run.getTexto_Results().getText());
        txt_Browse.append(run.getTexto_Browse().getText());
        
        separarResultados(txt_Browse.getText());        
        datosTabla();
*/                
    }//GEN-LAST:event_btn_RunActionPerformed

    private void btn_CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_CerrarActionPerformed

    private void txt_StrategyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_StrategyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_StrategyActionPerformed

    private void txt_EndpointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_EndpointActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_EndpointActionPerformed

    private void btn_StrategyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_StrategyActionPerformed
        // TODO add your handling code here:
        txt_Strategy.setText(cmb_Strategy.getSelectedItem().toString());        
    }//GEN-LAST:event_btn_StrategyActionPerformed

    private void btn_EndpointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EndpointActionPerformed
        // TODO add your handling code here:
        txt_Endpoint.setText(cmb_Endpoint.getSelectedItem().toString());        
    }//GEN-LAST:event_btn_EndpointActionPerformed

    private void cmb_EndpointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_EndpointActionPerformed
        // TODO add your handling code here:
        txt_Endpoint.setText("");        
    }//GEN-LAST:event_cmb_EndpointActionPerformed

    private void cmb_StrategyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_StrategyActionPerformed
        // TODO add your handling code here:
        txt_Strategy.setText("");        
    }//GEN-LAST:event_cmb_StrategyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RunForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RunForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RunForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RunForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RunForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Cerrar;
    private javax.swing.JButton btn_Endpoint;
    private javax.swing.JButton btn_Run;
    private javax.swing.JButton btn_Strategy;
    private javax.swing.JComboBox cmb_Endpoint;
    private javax.swing.JComboBox cmb_Strategy;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable tbl_Browse;
    private javax.swing.JTextArea txt_Browse;
    private javax.swing.JTextField txt_Endpoint;
    private javax.swing.JTextArea txt_Query;
    private javax.swing.JTextArea txt_Results;
    private javax.swing.JTextField txt_Strategy;
    // End of variables declaration//GEN-END:variables

public void cargarComboEndpoints(){
    cmb_Endpoint.removeAllItems();
    cmb_Endpoint.addItem("http://190.15.141.66:8890/sparql/");
    cmb_Endpoint.addItem("http://mgi.bio2rdf.org/sparql/");
    cmb_Endpoint.addItem("http://hgnc.bio2rdf.org/sparql/");
    txt_Endpoint.setText(cmb_Endpoint.getItemAt(0).toString());    
}

public void cargarComboEstrategias(){    
    cmb_Strategy.removeAllItems();
    cmb_Strategy.addItem("SERVICE");
    cmb_Strategy.addItem("VALUES");
    cmb_Strategy.addItem("UNION");    
    cmb_Strategy.addItem("FILTER");
    cmb_Strategy.addItem("NESTED");
    cmb_Strategy.addItem("SYMHASH");
    cmb_Strategy.addItem("SYMHASHP");
    txt_Strategy.setText(cmb_Strategy.getItemAt(0).toString());    
}

public boolean validaVacio(String campo, String nombreCampo){
    if(campo==null || campo.equals("")){
        JOptionPane.showMessageDialog(null, "Campo: " + nombreCampo + ", esta vacío");     
        return false;
    }else{
        return true;
    }
}

public void separarResultados(String resultados){
    matriz_Resultados = null;
    
    String[] filas_Resultados = resultados.split("->");    
    if(filas_Resultados.length==0)
        return;
    
    String[] datos_Fila = filas_Resultados[1].split("\\)");    
    if(datos_Fila.length==0)
        return;

    int numero_Filas = filas_Resultados.length;
    int numero_Columnas = datos_Fila.length;    
    System.out.println("filas: " + numero_Filas);
    System.out.println("columnas: " + numero_Columnas);
    
    matriz_Resultados = new String[numero_Filas-1][numero_Columnas-1]; 
        
    for(int i=1; i<filas_Resultados.length; i++){        
        String[] columnas_Resultados = filas_Resultados[i].split("\\)");
        for(int i1=0; i1<columnas_Resultados.length-1; i1++){
            matriz_Resultados[i-1][i1] = columnas_Resultados[i1];
            //txt_XML.append(i1 + ": " + columnas_Resultados[i1]);
            //txt_XML.append(System.getProperty("line.separator"));   // Salto de línea             
        }
    }    
}

public void datosTabla(){        
    //txt_XML.append("MATRIZ ");
    //txt_XML.append(System.getProperty("line.separator"));   // Salto de línea             
    
    tabla_Resultados.setNumRows(matriz_Resultados.length);
    
//    for(int j=0; j<matriz_Resultados[0].length; j++){
    for(int j=matriz_Resultados[0].length-1; j>=0; j--){    
        String nombreColumna = obtenerNombreColumna(matriz_Resultados[0][j]);
        tabla_Resultados.addColumn(nombreColumna);        
    }
        
    for(int i=0; i<matriz_Resultados.length; i++){        
        int contadorColumnas=0;
//        for(int j=0; j<matriz_Resultados[0].length; j++){
        for(int j=matriz_Resultados[0].length-1; j>=0; j--){                
            String respuesta = obtenerURI(matriz_Resultados[i][j]);
            tabla_Resultados.setValueAt(respuesta, i, contadorColumnas);
            contadorColumnas++;
        }
    }
    
}

public String obtenerURI(String respuesta){    
    try{
        String[] parte1 = respuesta.split("<");            
        String[] parte2 = parte1[1].split(">");
        String URI = parte2[0];
        return URI;
    }catch(Exception ex){
        JOptionPane.showMessageDialog(null, "Error al obtener la URI");                     
        return respuesta;
    }            
}

public String obtenerNombreColumna(String respuesta){    
    try{
        String[] parte1 = respuesta.split("\\?");            
        String[] parte2 = parte1[1].split("=");
        String nombreColumna = parte2[0];
        return nombreColumna;
    }catch(Exception ex){
        JOptionPane.showMessageDialog(null, "Error al obtener el nombre de la Columna");                     
        return respuesta;
    }            
}

}
